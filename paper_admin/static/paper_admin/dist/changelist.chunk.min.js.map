{"version":3,"sources":["webpack:///./paper_admin/static/paper_admin/src/js/components/actions.js","webpack:///./paper_admin/static/paper_admin/src/js/components/sortable_table/ListTree.js","webpack:///./paper_admin/static/paper_admin/src/js/components/sortable_table/StaggerHighlight.js","webpack:///./paper_admin/static/paper_admin/src/js/components/sortable_table/SortableTable.js","webpack:///./paper_admin/static/paper_admin/src/js/changelist.js","webpack:///./paper_admin/static/paper_admin/src/js/components/RelatedObjectLookups.js"],"names":["toggleInputs","inputs","checked","forEach","input","Boolean","dispatchEvent","Event","bubbles","cancelable","updateCounter","selected","reduce","sum","document","querySelectorAll","counter","innerHTML","interpolate","ngettext","sel","cnt","dataset","actionsIcnt","length","question","querySelector","hidden","showQuestion","clearAcross","setAcrossInput","value","Number","allContainer","clear","whenDomReady","checkboxes","lastChecked","table","getElementById","allToggleInput","addEventListener","this","event","target","classList","contains","row","closest","toggle","find","target_state","checkbox","ctrlKey","shiftKey","lastIndex","indexOf","targetIndex","startIndex","Math","min","endIndex","max","slice","tagName","preventDefault","selectAcross","list_editable_changed","form","confirm","gettext","save_button","action_selects","action_changed","Array","prototype","every","call","select","apply","protectEditForm","initActions","from","ListTree","elements","_buildTree","_createNode","child","pk","parseInt","id","parent","element","childs","_addNode","node","_nodes","isNaN","_roots","push","getNode","Error","stack","elem","stack_node","unshift","shift","bind","getRoots","map","root_node","getDescendants","result","child_pk","child_node","concat","StaggerHighlight","options","opts","Object","assign","className","staggerMin","staggerMax","_elements","_isReleased","_timer","_createTimer","i","count","speed","setInterval","add","_destroyTimer","_removeClass","clearInterval","remove","release","SortableTable","url","tree","handler","disabledClass","tbody","_createSortable","Sortable","create","animation","draggable","handle","filter","ghostClass","onStart","_onStart","onMove","_onMove","onEnd","_onEnd","evt","rows","item_parentId","item","parentId","related","moved","_getMovedRows","_normalizeTable","_createOrderMap","highlighter","_sendRequest","then","sliceStart","oldIndex","newIndex","sliceEnd","pk_array","order_array","order","pop","setAttribute","prev","previousElementSibling","next","nextElementSibling","parents","isPrevSibling","isNextChild","Element","after","data","fetch","method","credentials","headers","body","JSON","stringify","response","ok","error","status","statusText","catch","text","bootbox","alert","message","size","window","defaultPrevented","pagination","key","click","orderUrl","$","tooltip","title","placement","trigger","html","delay","show","hide","id_to_windowname","replace","windowname_to_id","showAdminPopup","triggeringLink","name_regexp","add_popup","name","href","browser_left","screenX","screenLeft","browser_top","screenY","screenTop","browser_width","outerWidth","clientWidth","browser_height","outerHeight","clientHeight","top_position","round","left_position","open","focus","showRelatedObjectLookupPopup","showRelatedObjectPopup","updateRelatedObjectLinks","$this","siblings","val","each","elm","attr","removeAttr","dismissAddRelatedObjectPopup","win","newId","newRepr","elemName","nodeName","toUpperCase","Option","close","dismissRelatedLookupPopup","chosenId","dismissChangeRelatedObjectPopup","objId","textContent","dismissDeleteRelatedObjectPopup","showAddAnotherPopup","dismissAddAnotherPopup","ready","on","opener","e","isDefaultPrevented","jQuery"],"mappings":"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","file":"changelist.chunk.min.js","sourcesContent":["/*global gettext, interpolate, ngettext*/\n\nimport whenDomReady from \"when-dom-ready\";\n\nconst TOGGLE_ALL_ID = 'action-toggle';\nconst CHECKBOX_CLASS = 'action-select';\nconst COUNTER_CLASS = 'action-counter';\nconst QUESTION_CLASS= 'action-question';\nconst ALL_CLASS = 'action-all';\nconst ACROSS_CLASS = 'select-across';\nconst CLEAR_CLASS = 'action-clear';\n\n\nwhenDomReady(function() {\n    const checkboxes = document.querySelectorAll(`.${CHECKBOX_CLASS}`);\n    if (checkboxes.length) {\n        initActions(Array.from(checkboxes));\n    }\n});\n\n\nfunction initActions(inputs) {\n    let lastChecked = null;\n    const table = document.getElementById('result_list');\n    const allToggleInput = document.getElementById(TOGGLE_ALL_ID);\n\n    // клик на чекбокс \"выбрать все\"\n    allToggleInput.addEventListener('click', function() {\n        toggleInputs(inputs, this.checked);\n        updateCounter(inputs);\n    });\n\n    // изменение состояния чекбокса\n    table.addEventListener('change', function(event) {\n        const target = event.target;\n        if (target.classList.contains(CHECKBOX_CLASS)) {\n            const row = target.closest('tr');\n            row && row.classList.toggle('selected', target.checked);\n        }\n\n        // все ли чекбоксы выделены\n        allToggleInput.checked = inputs.find(input => !input.checked) == null;\n    });\n\n    table.addEventListener('click', function(event) {\n        // получаем чекбокс\n        let target_state;\n        let checkbox = event.target.closest(`.${CHECKBOX_CLASS}`);\n        if (!checkbox) {\n            // если клик на сам элемент, то выделение работает только в случае,\n            // когда была зажата клавиша Ctrl (или Shift для массового выделения)\n            if (!event.ctrlKey && !event.shiftKey) {\n                return\n            }\n\n            checkbox = event.target.closest('tr').querySelector(`.${CHECKBOX_CLASS}`);\n            if (!checkbox) {\n                return\n            }\n            target_state = !checkbox.checked;\n        } else {\n            // при клике на чекбокс целевое состяние уже достигнуто\n            target_state = checkbox.checked;\n        }\n\n        if (lastChecked && event.shiftKey && (lastChecked !== checkbox)) {\n            // массовое выделение (через Shift)\n            const lastIndex = inputs.indexOf(lastChecked);\n            const targetIndex = inputs.indexOf(checkbox);\n            const startIndex = Math.min(lastIndex, targetIndex);\n            const endIndex = Math.max(lastIndex, targetIndex);\n            const input_slice = inputs.slice(startIndex, endIndex + 1);\n            toggleInputs(input_slice, target_state);\n        } else if (event.target !== checkbox) {\n            // если клик на ячейку - выделяем чекбокс вручную\n            toggleInputs([checkbox], target_state);\n        }\n\n        lastChecked = checkbox;\n        updateCounter(inputs);\n    });\n\n    // отмена выделения текста при клике с удержанным Shift\n    table.addEventListener('mousedown', function(event) {\n        const target = event.target;\n        if (event.shiftKey && ((target.tagName === 'TD') || (target.tagName === 'TH'))) {\n            event.preventDefault();\n        }\n    });\n\n    // выбор всех записей таблицы\n    document.addEventListener('click', function(event) {\n        const target = event.target;\n        if ((target.tagName === 'A') && target.closest(`.${QUESTION_CLASS}`)) {\n            event.preventDefault();\n            selectAcross();\n        }\n    });\n\n    // очистка выбора\n    document.addEventListener('click', function(event) {\n        const target = event.target;\n        if ((target.tagName === 'A') && target.closest(`.${CLEAR_CLASS}`)) {\n            event.preventDefault();\n            allToggleInput.checked = false;\n            toggleInputs(inputs, false);\n            clearAcross(inputs);\n            updateCounter(inputs);\n        }\n    });\n\n    protectEditForm();\n}\n\n/**\n * Требование подтверждения выполнения дествия, если в форме были изменения.\n */\nfunction protectEditForm() {\n    let list_editable_changed = false;\n    const form = document.getElementById('changelist_form');\n\n    form.addEventListener('change', function(event) {\n        const target = event.target;\n        if ((target.tagName === 'INPUT') && !target.closest(`.${CHECKBOX_CLASS}`)) {\n            list_editable_changed = true;\n        }\n    });\n\n    form.addEventListener('click', function(event) {\n        const target = event.target;\n        const action_button = target.closest('[name=\"index\"]');\n        if (action_button && list_editable_changed) {\n            const agree = confirm(gettext(\"You have unsaved changes on individual editable fields. If you run an action, your unsaved changes will be lost.\"));\n            if (!agree) {\n                event.preventDefault();\n            }\n        }\n    });\n\n    form.addEventListener('click', function(event) {\n        const target = event.target;\n        const save_button = target.closest('[name=\"_save\"]');\n\n        const action_selects = document.querySelectorAll('.actions select[name=\"action\"]');\n        const action_changed = !Array.prototype.every.call(action_selects, function(select) {\n            return !select.value\n        });\n        \n        if (save_button && action_changed) {\n            let apply;\n            if (list_editable_changed) {\n                apply = confirm(gettext(\"You have selected an action, but you haven't saved your changes to individual fields yet. Please click OK to save. You'll need to re-run the action.\"));\n            } else {\n                apply = confirm(gettext(\"You have selected an action, and you haven't made any changes on individual fields. You're probably looking for the Go button rather than the Save button.\"));\n            }\n            if (!apply) {\n                event.preventDefault();\n            }\n        }\n    });\n}\n\n/**\n * Установка/сброс галочки в чекбоксах.\n * @param {HTMLInputElement[]} inputs\n * @param {Boolean} checked\n */\nfunction toggleInputs(inputs, checked) {\n    inputs.forEach(function(input) {\n        input.checked = Boolean(checked);\n        input.dispatchEvent(new Event('change', {\n            bubbles: true,\n            cancelable: true\n        }));\n    });\n}\n\nfunction updateCounter(inputs) {\n    const selected = inputs.reduce((sum, input) => sum + (input.checked ? 1 : 0), 0);\n    const counters = document.querySelectorAll(`.${COUNTER_CLASS}`);\n    counters.forEach(function(counter) {\n        counter.innerHTML = interpolate(\n            ngettext('%(sel)s of %(cnt)s selected', '%(sel)s of %(cnt)s selected', selected),\n            {\n                sel: selected,\n                cnt: counter.dataset.actionsIcnt\n            },\n            true\n        );\n    });\n\n    if (selected === inputs.length) {\n        showQuestion();\n    } else {\n        clearAcross(inputs);\n    }\n}\n\n/**\n * Показ ссылки \"выбрать всё\"\n */\nfunction showQuestion() {\n    const question = document.querySelector(`.${QUESTION_CLASS}`);\n    question && (question.hidden = false);\n}\n\n/**\n * Установка значения input-элементу для выполнения действия над всеми элементами\n * @param {Boolean} value\n */\nfunction setAcrossInput(value) {\n    const acrossInput = document.querySelectorAll(`.${ACROSS_CLASS}`);\n    acrossInput.forEach(function(input) {\n        input.value = Number(value);\n    });\n}\n\nfunction selectAcross() {\n    setAcrossInput(true);\n\n    const counter = document.querySelector(`.${COUNTER_CLASS}`);\n    counter && (counter.hidden = true);\n\n    const allContainer = document.querySelector(`.${ALL_CLASS}`);\n    allContainer && (allContainer.hidden = false);\n\n    const question = document.querySelector(`.${QUESTION_CLASS}`);\n    question && (question.hidden = true);\n\n    const clear = document.querySelector(`.${CLEAR_CLASS}`);\n    clear && (clear.hidden = false);\n}\n\nfunction clearAcross(inputs) {\n    setAcrossInput(false);\n\n    const counter = document.querySelector(`.${COUNTER_CLASS}`);\n    counter && (counter.hidden = false);\n\n    const allContainer = document.querySelector(`.${ALL_CLASS}`);\n    allContainer && (allContainer.hidden = true);\n\n    const selected = inputs.reduce((sum, input) => sum + (input.checked ? 1 : 0), 0);\n    const question = document.querySelector(`.${QUESTION_CLASS}`);\n    question && (question.hidden = selected !== inputs.length);\n\n    const clear = document.querySelector(`.${CLEAR_CLASS}`);\n    clear && (clear.hidden = true);\n}\n","/**\n * Представление списка DOM-элементов в виде дерева.\n * Каждый DOM-элемент должен иметь data-атрибуты: id, parent.\n * Каждый дочерний узел должен идти после родителя.\n * @module ListTree\n */\n\n/**\n * @typedef {Object} module:ListTree.ListTreeNode\n * @property {Number}       pk\n * @property {Number}       parent\n * @property {HTMLElement}  element\n * @property {Number[]}     childs\n */\n\n/**\n * Конструктор объектов ListTree.\n * @param {NodeList|Element[]} elements\n * @constructor\n */\nfunction ListTree(elements) {\n    this._buildTree(elements);\n}\n\n/**\n * Создание узла дерева.\n * @param {HTMLElement} child\n * @returns {module:ListTree.ListTreeNode}\n * @private\n */\nListTree.prototype._createNode = function(child) {\n    const dataset = child.dataset;\n    return {\n        pk: parseInt(dataset.id),\n        parent: parseInt(dataset.parent),\n        element: child,\n        childs: []\n    };\n};\n\n/**\n * Добавление узла дерева в карту, для быстрого поиска по ID.\n * @param {module:ListTree.ListTreeNode} node\n * @returns {Boolean}\n * @private\n */\nListTree.prototype._addNode = function(node) {\n    if (node && (typeof node.pk === 'number')) {\n        this._nodes[node.pk] = node;\n        if (isNaN(node.parent)) {\n            this._roots.push(node);\n        }\n        return true;\n    }\n    return false;\n};\n\n/**\n * Получение узла по ID.\n * @param {Number} pk\n * @returns {module:ListTree.ListTreeNode}\n */\nListTree.prototype.getNode = function(pk) {\n    if (this._nodes === null) {\n        throw new Error('tree is empty');\n    }\n    if (!(pk in this._nodes)) {\n        throw new Error(`node ${pk} not found`);\n    }\n    return this._nodes[pk];\n};\n\n/**\n * Построение дерева из элементов.\n * @param {Element[]} elements\n * @private\n */\nListTree.prototype._buildTree = function(elements) {\n    const stack = [];\n\n    this._nodes = {};\n    this._roots = [];\n    elements.forEach(function(elem) {\n        let node = this._createNode(elem);\n        this._addNode(node);\n\n        while (stack.length) {\n            let stack_node = stack[0];\n            if (node.parent === stack_node.pk) {\n                stack_node.childs.push(node.pk);\n                stack.unshift(node);\n                return\n            }\n            stack.shift();\n        }\n\n        stack.unshift(node);\n    }.bind(this));\n};\n\n/**\n * Получение корневых элементов.\n * @returns {Element[]}\n */\nListTree.prototype.getRoots = function() {\n    if (this._roots === null) {\n        throw new Error('tree is empty');\n    }\n    return this._roots.map(function(root_node) {\n        return root_node.element\n    }.bind(this));\n};\n\n/**\n * Получение всех потомков узла.\n * @param {Number} pk\n * @returns {Element[]}\n */\nListTree.prototype.getDescendants = function(pk) {\n    const node = this.getNode(pk);\n    return node.childs.reduce(function(result, child_pk) {\n        let child_node = this.getNode(child_pk);\n        if (child_node) {\n            result.push(child_node.element);\n            result = result.concat(this.getDescendants(child_pk));\n        }\n        return result\n    }.bind(this), []);\n};\n\n\nexport default ListTree;\n","/**\n * Прелоадер для списков / таблиц.\n * Последовательно добавляет класс DOM-элементам и удаляет этот класс,\n * когда выполняется последнее событие из:\n * a) всем элементам был добавлен класс\n * b) вызван метод release()\n * @module StaggerHighlight\n */\n\n/**\n * @typedef {Object} module:StaggerHighlight.StaggerHighlightOptions\n * @property {String} className\n * @property {Number} staggerMin\n * @property {Number} staggerMax\n */\n\n/**\n * Конструктор объектов StaggerHighlight.\n * @param {Element[]} elements\n * @param {module:StaggerHighlight.StaggerHighlightOptions} [options]\n * @constructor\n */\nfunction StaggerHighlight(elements, options) {\n    /** @type module:StaggerHighlight.StaggerHighlightOptions */\n    this.opts = Object.assign({\n        className: 'highlight',\n        staggerMin: 12,\n        staggerMax: 50\n    }, options);\n\n    /**\n     * @type {Element[]}\n     * @private\n     */\n    this._elements = elements;\n\n    /**\n     * @type {Boolean}\n     * @private\n     */\n    this._isReleased = false;\n\n    /**\n     * @type {?Number}\n     * @private\n     */\n    this._timer = this._createTimer();\n}\n\n/**\n * Создание таймера, выделяюего элементы один за другим.\n * @returns {Number}\n * @private\n */\nStaggerHighlight.prototype._createTimer = function() {\n    let i = 0;\n    const count = this._elements.length;\n    const speed = Math.max(this.opts.staggerMin, this.staggerMax * 2 / count);\n    return setInterval(function() {\n        if (i < count) {\n            this._elements[i].classList.add(this.opts.className);\n            i++;\n        } else {\n            this._destroyTimer();\n            if (this._isReleased) {\n                this._removeClass();\n            }\n        }\n    }.bind(this), speed);\n};\n\n/**\n * Уничтожение таймера.\n * @private\n */\nStaggerHighlight.prototype._destroyTimer = function() {\n    if (this._timer !== null) {\n        clearInterval(this._timer);\n        this._timer = null;\n    }\n};\n\n/**\n * Немедленное удаление класса со всех элементов.\n * @private\n */\nStaggerHighlight.prototype._removeClass = function() {\n    this._elements.forEach(function(node) {\n        node.classList.remove(this.opts.className);\n    }.bind(this));\n};\n\n/**\n * Сигнал завершения операции.\n */\nStaggerHighlight.prototype.release = function() {\n    this._isReleased = true;\n    if (this._timer === null) {\n        this._removeClass();\n    }\n};\n\n\nexport default StaggerHighlight;\n","/**\n * Таблица с возможностью сортировки строк.\n * Каждая строка должна иметь атрибут data-id.\n * В случае, если строки представляют дерево, то еще необходим атрибут data-parent.\n * @module SortableTable\n */\n\n/**\n * @typedef {Object} module:SortableTable.SortableTableOptions\n * @property {String}  url\n * @property {Boolean} [tree]\n * @property {String}  [handler]\n * @property {String}  [disabledClass]\n */\n\nimport Sortable from \"sortablejs\";\nimport bootbox from \"../../vendor/bootbox\";\nimport ListTree from \"./ListTree\";\nimport StaggerHighlight from \"./StaggerHighlight\";\n\n/**\n * Конструктор объектов SortableTable.\n * @param {Element} table\n * @param {module:SortableTable.SortableTableOptions} [options]\n * @constructor\n */\nfunction SortableTable(table, options) {\n    /** @type {module:SortableTable.SortableTableOptions} */\n    this.opts = Object.assign({\n        url: null,\n        tree: false,\n        handler: '.handler',\n        disabledClass: 'disabled'\n    }, options);\n\n    /** @type {Element} */\n    this.table = table;\n\n    /** @type {Element} */\n    this.tbody = table.querySelector('tbody');\n    if (!this.tbody) {\n        throw new Error('table body not found');\n    }\n\n    /** @type {?ListTree} */\n    this.tree = null;\n\n    this._createSortable();\n}\n\n/**\n * Инициализация плагина сортировки.\n * @private\n */\nSortableTable.prototype._createSortable = function() {\n    return Sortable.create(this.tbody, {\n        animation: 0,\n        draggable: 'tr',\n        handle: this.opts.handler,\n        filter: '.' + this.opts.disabledClass,\n        ghostClass: 'sortable-ghost',\n        onStart: this._onStart.bind(this),\n        onMove: this._onMove.bind(this),\n        onEnd: this._onEnd.bind(this),\n    });\n};\n\n/**\n * Обработчик события начала перетаскивания.\n * @param evt\n * @private\n */\nSortableTable.prototype._onStart = function(evt) {\n    const rows = this.tbody.querySelectorAll('tr');\n\n    if (this.opts.tree) {\n        this.tree = new ListTree(rows);\n    }\n\n    // блокируем все узлы, кроме соседних\n    const item_parentId = parseInt(evt.item.dataset.parent);\n    rows.forEach(function(row) {\n        const parentId = parseInt(row.dataset.parent);\n        if ((!isNaN(parentId) || !isNaN(item_parentId)) && parentId !== item_parentId) {\n            row.classList.add(this.opts.disabledClass);\n        }\n    }.bind(this));\n};\n\n/**\n * Обработчик события перетаскивания.\n * @param evt\n * @returns {Boolean}\n * @private\n */\nSortableTable.prototype._onMove = function(evt) {\n    return !evt.related.classList.contains(this.opts.disabledClass);\n};\n\n/**\n * Обработчик события завершения перетаскивания.\n * @param evt\n * @private\n */\nSortableTable.prototype._onEnd = function(evt) {\n    // снимаем блокировку со всех узлов\n    const rows = this.tbody.querySelectorAll('tr');\n    rows.forEach(function(row) {\n        row.classList.remove(this.opts.disabledClass);\n    }.bind(this));\n\n    let moved = this._getMovedRows(evt);\n    if (!moved.length) {\n        return\n    }\n\n    this._normalizeTable(evt, moved);\n\n    const map = this._createOrderMap(evt, moved);\n\n    // выделение рядов, учавствовавших в перемещении\n    const highlighter = new StaggerHighlight(moved);\n    this._sendRequest(map).then(function() {\n        highlighter.release();\n    });\n};\n\n/**\n * Получение строк, чей порядок изменился.\n * @param evt\n * @returns {Element[]}\n * @private\n */\nSortableTable.prototype._getMovedRows = function(evt) {\n    const sliceStart = Math.min(evt.oldIndex, evt.newIndex);\n    const sliceEnd = Math.max(evt.oldIndex, evt.newIndex);\n    const rows = this.tbody.querySelectorAll('tr');\n    let slice = Array.prototype.slice.call(rows, sliceStart, sliceEnd + 1);\n    if (this.tree) {\n        // пропускаем узлы, не являющиеся соседними\n        const pk = parseInt(evt.item.dataset.id);\n        const node = this.tree.getNode(pk);\n        slice = slice.filter(function(row) {\n            return parseInt(row.dataset.parent) === node.parent\n        });\n    }\n    return slice;\n};\n\n/**\n * Создание карты новых значений сортировки строк.\n * @param evt\n * @param {Element[]} rows\n * @returns {Object}\n * @private\n */\nSortableTable.prototype._createOrderMap = function(evt, rows) {\n    const pk_array = [];\n    const order_array = [];\n    rows.forEach(function(row) {\n        const handle = row.querySelector(this.opts.handler);\n        if (handle) {\n            pk_array.push(parseInt(row.dataset.id));\n            order_array.push(parseInt(handle.dataset.order));\n        }\n    }.bind(this));\n\n    // циклический сдвиг значений order\n    const movedDown = evt.oldIndex < evt.newIndex;\n    if (movedDown) {\n        order_array.unshift(order_array.pop());\n    } else {\n        order_array.push(order_array.shift());\n    }\n\n    return pk_array.reduce(function(result, pk, i) {\n        result[pk] = order_array[i];\n\n        // обновляем атрибут order\n        const row = this.tbody.querySelector('tr[data-id=\"'+pk+'\"]');\n        row.querySelector(this.opts.handler).setAttribute('data-order', order_array[i]);\n\n        return result;\n    }.bind(this), {});\n};\n\n/**\n * Нормализация таблицы.\n * Все дочерние строки перемещаются под своего родителя.\n * Без этого метода может случиться ситуация, когда элемент\n * был перемещен между своим соседом и его детьми.\n * @param evt\n * @param {Element[]} moved\n * @private\n */\nSortableTable.prototype._normalizeTable = function(evt, moved) {\n    if (this.tree) {\n        const pk = parseInt(evt.item.dataset.id);\n        const node = this.tree.getNode(pk);\n        const prev = evt.item.previousElementSibling;\n        const next = evt.item.nextElementSibling;\n        const parents = moved.slice();\n        if (prev && next) {\n            // если предыдущая строка - сосед, а следующая - ребенок соседа,\n            // то сосед должен быть в списке нормализации.\n            const isPrevSibling = parseInt(prev.dataset.parent) === node.parent;\n            const isNextChild = parseInt(next.dataset.parent) === parseInt(prev.dataset.id);\n            if (isPrevSibling && isNextChild && (parents.indexOf(prev) < 0)) {\n                parents.unshift(prev);\n            }\n        }\n\n        // перенос детей под родителя\n        parents.forEach(function(parent) {\n            const pk = parseInt(parent.dataset.id);\n            const childs = this.tree.getDescendants(pk);\n            Element.prototype.after.apply(parent, childs);\n        }.bind(this));\n    }\n};\n\n/**\n * Отправка новых значений сортировки на сервер.\n * @param {Object} data\n * @returns {Promise<Response>}\n * @private\n */\nSortableTable.prototype._sendRequest = function(data) {\n    return fetch(this.opts.url, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then(function(response) {\n        if (!response.ok) {\n            const error = new Error(`${response.status} ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    }).catch(function(error) {\n        error.response.text().then(function(text) {\n            bootbox.alert({\n                message: text,\n                size: 'small'\n            });\n        });\n    });\n};\n\n\nexport default SortableTable;\n","/* global gettext */\n\nimport whenDomReady from \"when-dom-ready\";\nimport SortableTable from \"./components/sortable_table/SortableTable\";\nimport \"./components/actions\";\nimport \"./components/RelatedObjectLookups\";\n\n\n// Ctrl + Arrows navigation\nwindow.addEventListener('keydown', function(event) {\n    if (event.defaultPrevented) {\n        return; // Do nothing if the event was already processed\n    }\n\n    if (event.ctrlKey) {\n        const paperMain = document.getElementById('paper-main');\n        const pagination = paperMain.querySelector('.pagination');\n        if (!pagination) {\n            return\n        }\n\n        switch (event.key) {\n            case \"Left\":\n            case \"ArrowLeft\":\n                pagination.querySelector('.page-link[aria-label=\"Previous\"]').click();\n                break;\n            case \"Right\":\n            case \"ArrowRight\":\n                pagination.querySelector('.page-link[aria-label=\"Next\"]').click();\n                break;\n            default:\n                // Quit when this doesn't handle the key event.\n                return;\n        }\n\n        // Cancel the default action to avoid it being handled twice\n        event.preventDefault();\n    }\n});\n\n\nwhenDomReady(function() {\n    const table = document.getElementById('result_list');\n    if (table && table.classList.contains('table-sortable')) {\n        if (table.classList.contains('table-sortable-allowed')) {\n            new SortableTable(table, {\n                url: table.dataset.orderUrl,\n                tree: table.classList.contains('table-mptt'),\n                handler: '.sort-handler'\n            });\n        } else {\n            $(table).find('.sort-handler').tooltip({\n                title: gettext('Sort list by this column to enable ordering'),\n                placement: 'bottom',\n                trigger: 'hover',\n                html: true,\n                delay: {\n                    show: 300,\n                    hide: 100\n                }\n            });\n        }\n    }\n});\n","// Handles related-objects functionality: lookup link for raw_id_fields\n// and Add Another links.\n\n(function($) {\n    'use strict';\n\n    // IE doesn't accept periods or dashes in the window name, but the element IDs\n    // we use to generate popup window names may contain them, therefore we map them\n    // to allowed characters in a reversible way so that we can locate the correct\n    // element when the popup window is dismissed.\n    function id_to_windowname(text) {\n        text = text.replace(/\\./g, '__dot__');\n        text = text.replace(/-/g, '__dash__');\n        return text;\n    }\n\n    function windowname_to_id(text) {\n        text = text.replace(/__dot__/g, '.');\n        text = text.replace(/__dash__/g, '-');\n        return text;\n    }\n\n    function showAdminPopup(triggeringLink, name_regexp, add_popup) {\n        let name = triggeringLink.id.replace(name_regexp, '');\n        name = id_to_windowname(name);\n        let href = triggeringLink.href;\n        if (add_popup) {\n            if (href.indexOf('?') === -1) {\n                href += '?_popup=1';\n            } else {\n                href += '&_popup=1';\n            }\n        }\n\n        // Центрирование popup\n        const browser_left = typeof window.screenX !== 'undefined' ? window.screenX : window.screenLeft,\n            browser_top = typeof window.screenY !== 'undefined' ? window.screenY : window.screenTop,\n            browser_width = typeof window.outerWidth !== 'undefined' ? window.outerWidth : document.body.clientWidth,\n            browser_height = typeof window.outerHeight !== 'undefined' ? window.outerHeight : document.body.clientHeight,\n            popup_width = 940,\n            popup_height = 600,\n            top_position = browser_top + Math.round((browser_height - popup_height) / 2),\n            left_position = browser_left + Math.round((browser_width - popup_width) / 2);\n\n        const win = window.open(href, name,\n            'width=' + popup_width +\n            ',height=' + popup_height +\n            ',top=' + top_position +\n            ',left=' + left_position +\n            ',resizable=yes,scrollbars=yes'\n        );\n\n        win.focus();\n        return false;\n    }\n\n    function showRelatedObjectLookupPopup(triggeringLink) {\n        return showAdminPopup(triggeringLink, /^lookup_/, true);\n    }\n\n    function dismissRelatedLookupPopup(win, chosenId) {\n        const name = windowname_to_id(win.name);\n        const elem = document.getElementById(name);\n        if (elem.className.indexOf('vManyToManyRawIdAdminField') !== -1 && elem.value) {\n            elem.value += ',' + chosenId;\n        } else {\n            document.getElementById(name).value = chosenId;\n        }\n        win.close();\n    }\n\n    function showRelatedObjectPopup(triggeringLink) {\n        return showAdminPopup(triggeringLink, /^(change|add|delete)_/, false);\n    }\n\n    function updateRelatedObjectLinks(triggeringLink) {\n        const $this = $(triggeringLink);\n        const siblings = $this.closest('.related-widget-wrapper').find('.view-related, .change-related, .delete-related');\n        if (!siblings.length) {\n            return;\n        }\n        const value = $this.val();\n        if (value) {\n            siblings.each(function() {\n                const elm = $(this);\n                elm.attr('href', elm.attr('data-href-template').replace('__fk__', value));\n            });\n        } else {\n            siblings.removeAttr('href');\n        }\n    }\n\n    function dismissAddRelatedObjectPopup(win, newId, newRepr) {\n        const name = windowname_to_id(win.name);\n        const elem = document.getElementById(name);\n        if (elem) {\n            const elemName = elem.nodeName.toUpperCase();\n            if (elemName === 'SELECT') {\n                elem.options[elem.options.length] = new Option(newRepr, newId, true, true);\n            } else if (elemName === 'INPUT') {\n                if (elem.className.indexOf('vManyToManyRawIdAdminField') !== -1 && elem.value) {\n                    elem.value += ',' + newId;\n                } else {\n                    elem.value = newId;\n                }\n            }\n            // Trigger a change event to update related links if required.\n            $(elem).trigger('change');\n        }\n        win.close();\n    }\n\n    function dismissChangeRelatedObjectPopup(win, objId, newRepr, newId) {\n        const id = windowname_to_id(win.name).replace(/^edit_/, '');\n        const select = $('#' + id);\n        select.find('option').each(function() {\n            if (this.value === objId) {\n                this.textContent = newRepr;\n                this.value = newId;\n            }\n        });\n        win.close();\n    }\n\n    function dismissDeleteRelatedObjectPopup(win, objId) {\n        const id = windowname_to_id(win.name).replace(/^delete_/, '');\n        const select = $('#' + id);\n        select.find('option').each(function() {\n            if (this.value === objId) {\n                $(this).remove();\n            }\n        }).trigger('change');\n        win.close();\n    }\n\n    // Global for testing purposes\n    window.id_to_windowname = id_to_windowname;\n    window.windowname_to_id = windowname_to_id;\n\n    window.showRelatedObjectLookupPopup = showRelatedObjectLookupPopup;\n    window.dismissRelatedLookupPopup = dismissRelatedLookupPopup;\n    window.showRelatedObjectPopup = showRelatedObjectPopup;\n    window.updateRelatedObjectLinks = updateRelatedObjectLinks;\n    window.dismissAddRelatedObjectPopup = dismissAddRelatedObjectPopup;\n    window.dismissChangeRelatedObjectPopup = dismissChangeRelatedObjectPopup;\n    window.dismissDeleteRelatedObjectPopup = dismissDeleteRelatedObjectPopup;\n\n    // Kept for backward compatibility\n    window.showAddAnotherPopup = showRelatedObjectPopup;\n    window.dismissAddAnotherPopup = dismissAddRelatedObjectPopup;\n\n    $(document).ready(function() {\n        $(\"a[data-popup-opener]\").on('click', function(event) {\n            event.preventDefault();\n            opener.dismissRelatedLookupPopup(window, $(this).data(\"popup-opener\"));\n        });\n        $('body').on('click', '.related-widget-wrapper-link', function(e) {\n            e.preventDefault();\n            if (this.href) {\n                const event = $.Event('django:show-related', {href: this.href});\n                $(this).trigger(event);\n                if (!event.isDefaultPrevented()) {\n                    showRelatedObjectPopup(this);\n                }\n            }\n        }).on('change', '.related-widget-wrapper select', function() {\n            const event = $.Event('django:update-related');\n            $(this).trigger(event);\n            if (!event.isDefaultPrevented()) {\n                updateRelatedObjectLinks(this);\n            }\n        }).on('change', '.related-widget-wrapper input', function() {\n            if (this.checked) {\n                updateRelatedObjectLinks(this);\n            }\n        }).on('click', '.related-lookup', function(e) {\n            e.preventDefault();\n            const event = $.Event('django:lookup-related');\n            $(this).trigger(event);\n            if (!event.isDefaultPrevented()) {\n                showRelatedObjectLookupPopup(this);\n            }\n        });\n\n        $('.related-widget-wrapper select').trigger('change');\n        $('.related-widget-wrapper input:checked').trigger('change');\n    });\n\n})(jQuery);\n"],"sourceRoot":""}