(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["changeform"],{

/***/ "./paper_admin/static/paper_admin/src/css/widgets/autocomplete.css":
/*!*************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/css/widgets/autocomplete.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/css/widgets/datetime.scss":
/*!**********************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/css/widgets/datetime.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/css/widgets/multiselect.scss":
/*!*************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/css/widgets/multiselect.scss ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/changeform.js":
/*!*************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/changeform.js ***!
  \*************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _components_hook_unload__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/hook_unload */ "./paper_admin/static/paper_admin/src/js/components/hook_unload.js");
/* harmony import */ var _components_inlines_inlines__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/inlines/inlines */ "./paper_admin/static/paper_admin/src/js/components/inlines/inlines.js");
/* harmony import */ var _components_inlines_sortable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/inlines/sortable */ "./paper_admin/static/paper_admin/src/js/components/inlines/sortable.js");
/* harmony import */ var _components_RelatedObjectLookups__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/RelatedObjectLookups */ "./paper_admin/static/paper_admin/src/js/components/RelatedObjectLookups.js");
/* harmony import */ var _components_RelatedObjectLookups__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_components_RelatedObjectLookups__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_autosize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/autosize */ "./paper_admin/static/paper_admin/src/js/components/autosize.js");
/* harmony import */ var _components_tabs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/tabs */ "./paper_admin/static/paper_admin/src/js/components/tabs.js");
/* harmony import */ var _widgets_autocomplete__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./widgets/autocomplete */ "./paper_admin/static/paper_admin/src/js/widgets/autocomplete.js");
/* harmony import */ var _widgets_clearable_file__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./widgets/clearable_file */ "./paper_admin/static/paper_admin/src/js/widgets/clearable_file.js");
/* harmony import */ var _widgets_clearable_file__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_widgets_clearable_file__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _widgets_datetime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./widgets/datetime */ "./paper_admin/static/paper_admin/src/js/widgets/datetime.js");
/* harmony import */ var _widgets_email__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./widgets/email */ "./paper_admin/static/paper_admin/src/js/widgets/email.js");
/* harmony import */ var _widgets_email__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_widgets_email__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _widgets_multiselect__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./widgets/multiselect */ "./paper_admin/static/paper_admin/src/js/widgets/multiselect.js");
/* harmony import */ var _widgets_password__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./widgets/password */ "./paper_admin/static/paper_admin/src/js/widgets/password.js");
/* harmony import */ var _widgets_password__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_widgets_password__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _widgets_url__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./widgets/url */ "./paper_admin/static/paper_admin/src/js/widgets/url.js");
/* harmony import */ var _widgets_url__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_widgets_url__WEBPACK_IMPORTED_MODULE_13__);
/* global gettext */














Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_0__["default"])(function () {
  // предупреждение при закрытии формы
  const form = document.getElementById('changeform');

  if (form) {
    Object(_components_hook_unload__WEBPACK_IMPORTED_MODULE_1__["default"])(form);
  } // динамическая подгрузка скрипта для prepopulate_fields


  if (window.django_prepopulated_fields && window.django_prepopulated_fields.length) {
    Promise.all(/*! import() | prepopulate */[__webpack_require__.e("vendors~prepopulate"), __webpack_require__.e("prepopulate")]).then(__webpack_require__.bind(null, /*! ./components/prepopulate/prepopulate */ "./paper_admin/static/paper_admin/src/js/components/prepopulate/prepopulate.js"));
  }
});

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/RelatedObjectLookups.js":
/*!**********************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/RelatedObjectLookups.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {// Handles related-objects functionality: lookup link for raw_id_fields
// and Add Another links.
(function ($) {
  'use strict'; // IE doesn't accept periods or dashes in the window name, but the element IDs
  // we use to generate popup window names may contain them, therefore we map them
  // to allowed characters in a reversible way so that we can locate the correct
  // element when the popup window is dismissed.

  function id_to_windowname(text) {
    text = text.replace(/\./g, '__dot__');
    text = text.replace(/-/g, '__dash__');
    return text;
  }

  function windowname_to_id(text) {
    text = text.replace(/__dot__/g, '.');
    text = text.replace(/__dash__/g, '-');
    return text;
  }

  function showAdminPopup(triggeringLink, name_regexp, add_popup) {
    let name = triggeringLink.id.replace(name_regexp, '');
    name = id_to_windowname(name);
    let href = triggeringLink.href;

    if (add_popup) {
      if (href.indexOf('?') === -1) {
        href += '?_popup=1';
      } else {
        href += '&_popup=1';
      }
    } // Центрирование popup


    const browser_left = typeof window.screenX !== 'undefined' ? window.screenX : window.screenLeft,
          browser_top = typeof window.screenY !== 'undefined' ? window.screenY : window.screenTop,
          browser_width = typeof window.outerWidth !== 'undefined' ? window.outerWidth : document.body.clientWidth,
          browser_height = typeof window.outerHeight !== 'undefined' ? window.outerHeight : document.body.clientHeight,
          popup_width = 940,
          popup_height = 600,
          top_position = browser_top + Math.round((browser_height - popup_height) / 2),
          left_position = browser_left + Math.round((browser_width - popup_width) / 2);
    const win = window.open(href, name, 'width=' + popup_width + ',height=' + popup_height + ',top=' + top_position + ',left=' + left_position + ',resizable=yes,scrollbars=yes');
    win.focus();
    return false;
  }

  function showRelatedObjectLookupPopup(triggeringLink) {
    return showAdminPopup(triggeringLink, /^lookup_/, true);
  }

  function dismissRelatedLookupPopup(win, chosenId) {
    const name = windowname_to_id(win.name);
    const elem = document.getElementById(name);

    if (elem.className.indexOf('vManyToManyRawIdAdminField') !== -1 && elem.value) {
      elem.value += ',' + chosenId;
    } else {
      document.getElementById(name).value = chosenId;
    }

    win.close();
  }

  function showRelatedObjectPopup(triggeringLink) {
    return showAdminPopup(triggeringLink, /^(change|add|delete)_/, false);
  }

  function updateRelatedObjectLinks(triggeringLink) {
    const $this = $(triggeringLink);
    const siblings = $this.closest('.related-widget-wrapper').find('.view-related, .change-related, .delete-related');

    if (!siblings.length) {
      return;
    }

    const value = $this.val();

    if (value) {
      siblings.each(function () {
        const elm = $(this);
        elm.attr('href', elm.attr('data-href-template').replace('__fk__', value));
      });
    } else {
      siblings.removeAttr('href');
    }
  }

  function dismissAddRelatedObjectPopup(win, newId, newRepr) {
    const name = windowname_to_id(win.name);
    const elem = document.getElementById(name);

    if (elem) {
      const elemName = elem.nodeName.toUpperCase();

      if (elemName === 'SELECT') {
        elem.options[elem.options.length] = new Option(newRepr, newId, true, true);
      } else if (elemName === 'INPUT') {
        if (elem.className.indexOf('vManyToManyRawIdAdminField') !== -1 && elem.value) {
          elem.value += ',' + newId;
        } else {
          elem.value = newId;
        }
      } // Trigger a change event to update related links if required.


      $(elem).trigger('change');
    }

    win.close();
  }

  function dismissChangeRelatedObjectPopup(win, objId, newRepr, newId) {
    const id = windowname_to_id(win.name).replace(/^edit_/, '');
    const select = $('#' + id);
    select.find('option').each(function () {
      if (this.value === objId) {
        this.textContent = newRepr;
        this.value = newId;
      }
    });
    win.close();
  }

  function dismissDeleteRelatedObjectPopup(win, objId) {
    const id = windowname_to_id(win.name).replace(/^delete_/, '');
    const select = $('#' + id);
    select.find('option').each(function () {
      if (this.value === objId) {
        $(this).remove();
      }
    }).trigger('change');
    win.close();
  } // Global for testing purposes


  window.id_to_windowname = id_to_windowname;
  window.windowname_to_id = windowname_to_id;
  window.showRelatedObjectLookupPopup = showRelatedObjectLookupPopup;
  window.dismissRelatedLookupPopup = dismissRelatedLookupPopup;
  window.showRelatedObjectPopup = showRelatedObjectPopup;
  window.updateRelatedObjectLinks = updateRelatedObjectLinks;
  window.dismissAddRelatedObjectPopup = dismissAddRelatedObjectPopup;
  window.dismissChangeRelatedObjectPopup = dismissChangeRelatedObjectPopup;
  window.dismissDeleteRelatedObjectPopup = dismissDeleteRelatedObjectPopup; // Kept for backward compatibility

  window.showAddAnotherPopup = showRelatedObjectPopup;
  window.dismissAddAnotherPopup = dismissAddRelatedObjectPopup;
  $(document).ready(function () {
    $("a[data-popup-opener]").on('click', function (event) {
      event.preventDefault();
      opener.dismissRelatedLookupPopup(window, $(this).data("popup-opener"));
    });
    $('body').on('click', '.related-widget-wrapper-link', function (e) {
      e.preventDefault();

      if (this.href) {
        const event = $.Event('django:show-related', {
          href: this.href
        });
        $(this).trigger(event);

        if (!event.isDefaultPrevented()) {
          showRelatedObjectPopup(this);
        }
      }
    }).on('change', '.related-widget-wrapper select', function () {
      const event = $.Event('django:update-related');
      $(this).trigger(event);

      if (!event.isDefaultPrevented()) {
        updateRelatedObjectLinks(this);
      }
    }).on('change', '.related-widget-wrapper input', function () {
      if (this.checked) {
        updateRelatedObjectLinks(this);
      }
    }).on('click', '.related-lookup', function (e) {
      e.preventDefault();
      const event = $.Event('django:lookup-related');
      $(this).trigger(event);

      if (!event.isDefaultPrevented()) {
        showRelatedObjectLookupPopup(this);
      }
    });
    $('.related-widget-wrapper select').trigger('change');
    $('.related-widget-wrapper input:checked').trigger('change');
  });
})(jQuery);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js")))

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/autosize.js":
/*!**********************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/autosize.js ***!
  \**********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var autosize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! autosize */ "./node_modules/autosize/dist/autosize.js");
/* harmony import */ var autosize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(autosize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _emitters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./emitters */ "./paper_admin/static/paper_admin/src/js/components/emitters.js");




function initAutosize(root = document.body) {
  let selector = 'textarea[autosize]';
  root.matches(selector) && autosize__WEBPACK_IMPORTED_MODULE_0___default()(root);
  autosize__WEBPACK_IMPORTED_MODULE_0___default()(root.querySelectorAll(selector));
}

Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_1__["default"])(function () {
  initAutosize(); // FIX bootstrap tabs

  $(document).on('shown.bs.tab', function (event) {
    const tab_selector = event.target.getAttribute('href');
    const tab_pane = tab_selector && document.querySelector(tab_selector);

    if (tab_pane) {
      autosize__WEBPACK_IMPORTED_MODULE_0___default.a.update(tab_pane.querySelectorAll('textarea[autosize]'));
    }
  });
});
_emitters__WEBPACK_IMPORTED_MODULE_2__["default"].dom.on('mutate', initAutosize); // share plugin

window.paperAdmin = window.paperAdmin || {};
Object.assign(window.paperAdmin, {
  autosize: (autosize__WEBPACK_IMPORTED_MODULE_0___default())
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js")))

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/hook_unload.js":
/*!*************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/hook_unload.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hookUnload; });
/* global gettext */

/**
 * Инициализация отслеживания изменения формы и вывод
 * предупреждения при попытке закрыть страницу без сохранения.
 */
function hookUnload(form) {
  let submit = false;
  let formHasChanged = false;
  form.addEventListener('submit', function () {
    submit = true;
  });
  const message = gettext('You have unsaved changes');
  window.addEventListener('beforeunload', function (evt) {
    if (!submit && formHasChanged) {
      evt.returnValue = message;
      return message;
    }
  }); // начинаем отслеживать изменения после первого действия
  // пользователя, чтобы игнорировать последствия инициализации

  document.addEventListener('keydown', userActionHandler);
  document.addEventListener('mousedown', userActionHandler);

  function userActionHandler() {
    document.removeEventListener('keydown', userActionHandler);
    document.removeEventListener('mousedown', userActionHandler);
    form.addEventListener('change', function changeHandler(event) {
      form.removeEventListener('change', changeHandler);
      const target = event.target;
      const widget = target.closest('.form-widget');

      if (widget && form.contains(widget)) {
        formHasChanged = true;
      }
    });
  }
}

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/inlines/SortButtons.js":
/*!*********************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/inlines/SortButtons.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
/* harmony import */ var gsap_ScrollToPlugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap/ScrollToPlugin */ "./node_modules/gsap/ScrollToPlugin.js");
/**
 * Сортировка DOM-элементов с помощью кнопок.
 * @module SortButtons
 */

/**
 * @typedef {Object} module:SortButtons.SortButtonsOptions
 * @property {Number}    speed
 * @property {String}    [items]
 * @property {String}    [moveUpBtn]
 * @property {String}    [moveDownBtn]
 * @property {String}    [disabledClass]
 * @property {?String}   [ignore]
 * @property {?Function} [onChange]
 */


gsap__WEBPACK_IMPORTED_MODULE_0__["gsap"].registerPlugin(gsap_ScrollToPlugin__WEBPACK_IMPORTED_MODULE_1__["ScrollToPlugin"]);
/**
 * Конструктор объектов SortButtons.
 * @param {Element} root
 * @param {module:SortButtons.SortButtonsOptions} [options]
 * @constructor
 */

function SortButtons(root, options) {
  /** @type module:SortButtons.SortButtonsOptions */
  this.opts = Object.assign({
    speed: 1,
    items: '.item',
    moveUpBtn: '.move-up',
    moveDownBtn: '.move-down',
    disabledClass: 'disabled',
    scrollWindow: true,
    scrollMargin: {
      top: 300,
      bottom: 350
    },
    ignore: null,
    onChange: null
  }, options);
  /** @type {Element} */

  this.root = root;
  root.addEventListener('click', this._onClick.bind(this));
  root.addEventListener('update:sortbuttons', this.updateBounds.bind(this));
  this.updateBounds();
}
/**
 * Обработчик события клика в пределах корневого элемента.
 * @param {MouseEvent} event
 * @private
 */


SortButtons.prototype._onClick = function (event) {
  const target = event.target;
  const moveUpButton = target.closest(this.opts.moveUpBtn);

  if (moveUpButton && this.root.contains(moveUpButton)) {
    if (moveUpButton.classList.contains(this.opts.disabledClass)) {
      return;
    }

    const item = moveUpButton.closest(this.opts.items);

    if (item) {
      event.preventDefault();
      event.stopPropagation();
      this.moveUp(item);
    }

    return;
  }

  const moveDownButton = target.closest(this.opts.moveDownBtn);

  if (moveDownButton && this.root.contains(moveDownButton)) {
    if (moveDownButton.classList.contains(this.opts.disabledClass)) {
      return;
    }

    const item = moveDownButton.closest(this.opts.items);

    if (item) {
      event.preventDefault();
      event.stopPropagation();
      this.moveDown(item);
    }
  }
};
/**
 * Поиск ближайшего перемещаемого элемента справа, начиная с element.
 * @param {Element} element
 * @returns {Element}
 * @private
 */


SortButtons.prototype._findNextItem = function (element) {
  let nextItem = element;

  while (nextItem) {
    if (this.opts.ignore && nextItem.matches(this.opts.ignore)) {
      nextItem = nextItem.nextElementSibling;
    } else if (!nextItem.matches(this.opts.items)) {
      nextItem = nextItem.nextElementSibling;
    } else {
      break;
    }
  }

  return nextItem;
};
/**
 * Поиск ближайшего перемещаемого элемента слева, начиная с element.
 * @param {Element} element
 * @returns {Element}
 * @private
 */


SortButtons.prototype._findPreviousItem = function (element) {
  let prevItem = element;

  while (prevItem) {
    if (this.opts.ignore && prevItem.matches(this.opts.ignore)) {
      prevItem = prevItem.previousElementSibling;
    } else if (!prevItem.matches(this.opts.items)) {
      prevItem = prevItem.previousElementSibling;
    } else {
      break;
    }
  }

  return prevItem;
};
/**
 * Перемещение элемента вниз.
 * @param {Element} item
 */


SortButtons.prototype.moveDown = function (item) {
  const nextItem = this._findNextItem(item.nextElementSibling);

  if (nextItem) {
    this._swap(item, nextItem);
  }
};
/**
 * Перемещение элемента наверх.
 * @param {Element} item
 */


SortButtons.prototype.moveUp = function (item) {
  const prevItem = this._findPreviousItem(item.previousElementSibling);

  if (prevItem) {
    this._swap(prevItem, item, true);
  }
};
/**
 * Меняет местами два соседних элемента elem1 и elem2 с анимацией.
 * @param {Element} elem1
 * @param {Element} elem2
 * @param {boolean} reversed - True, если elem2 считается активным
 * @private
 */


SortButtons.prototype._swap = function (elem1, elem2, reversed = false) {
  //   Initial state:
  //
  //  |-------------|
  //  |    elem1    |
  //  |             |
  //  |-------------|
  //
  //  |-------------|
  //  |    elem2    |
  //  |-------------|
  //
  const rect1 = elem1.getBoundingClientRect();
  const rect2 = elem2.getBoundingClientRect();
  const initialCSSText1 = elem1.style.cssText;
  const initialCSSText2 = elem2.style.cssText;
  this.disableItemButtons(elem1);
  this.disableItemButtons(elem2);
  elem2.after(elem1); // имитация начального расположения

  const spaceY = rect2.top - rect1.top - rect1.height;
  elem1.style.transform = `translate3d(0, ${-rect2.height - spaceY}px, ${reversed ? 0 : 1}px)`;
  elem2.style.transform = `translate3d(0, ${rect2.top - rect1.top}px, ${reversed ? 1 : 0}px)`;
  const tl = new gsap__WEBPACK_IMPORTED_MODULE_0__["TimelineLite"]({
    onComplete: function () {
      elem1.style.cssText = initialCSSText1;
      elem2.style.cssText = initialCSSText2;
      this.updateBounds();
    }.bind(this)
  }).to(elem1, {
    duration: this.opts.speed,
    y: 0,
    clearProps: 'all'
  }).to(elem2, {
    duration: this.opts.speed,
    y: 0,
    clearProps: 'all'
  }, 0);

  if (this.opts.scrollWindow) {
    const pageYOffset = window.pageYOffset || document.documentElement.scrollTop;
    const newYOffset = pageYOffset + (reversed ? rect1.top - rect2.top : rect2.top - rect1.top);
    const topBound = this.opts.scrollMargin.top;
    const bottomBound = window.innerHeight - this.opts.scrollMargin.bottom;
    let needScrollWindow = true;

    if (reversed) {
      needScrollWindow &= !(rect1.top > bottomBound && rect2.top > bottomBound);
    } else {
      needScrollWindow &= !(rect1.top < topBound && rect2.top < topBound);
    }

    if (needScrollWindow) {
      tl.to(window, {
        duration: this.opts.speed,
        scrollTo: {
          y: Math.max(0, newYOffset)
        }
      }, 0);
    }
  } // callback


  if (typeof this.opts.onChange === 'function') {
    this.opts.onChange.call(this, elem1, elem2);
  }
};
/**
 * Отключение кнопок сортировки.
 * @param {Element} item
 */


SortButtons.prototype.disableItemButtons = function (item) {
  const upBtn = item.querySelector(this.opts.moveUpBtn);
  const downBtn = item.querySelector(this.opts.moveDownBtn);
  upBtn.classList.add(this.opts.disabledClass);
  downBtn.classList.add(this.opts.disabledClass);
};
/**
 * Отключение у граничных элементов кнопок, которые не имеют смысла.
 */


SortButtons.prototype.updateBounds = function () {
  const items = this.root.querySelectorAll(this.opts.items);

  if (!items.length) {
    return;
  }

  items.forEach(function (item) {
    const upBtn = item.querySelector(this.opts.moveUpBtn);
    const downBtn = item.querySelector(this.opts.moveDownBtn);
    upBtn.classList.remove(this.opts.disabledClass);
    downBtn.classList.remove(this.opts.disabledClass);
  }.bind(this));

  const firstItem = this._findNextItem(items[0]);

  if (firstItem) {
    const firstItemBtn = firstItem.querySelector(this.opts.moveUpBtn);

    if (firstItemBtn) {
      firstItemBtn.classList.add(this.opts.disabledClass);
    }
  }

  const lastItem = this._findPreviousItem(items[items.length - 1]);

  if (lastItem) {
    const lastItemBtn = lastItem.querySelector(this.opts.moveDownBtn);

    if (lastItemBtn) {
      lastItemBtn.classList.add(this.opts.disabledClass);
    }
  }
};

/* harmony default export */ __webpack_exports__["default"] = (SortButtons);

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/inlines/inlines.js":
/*!*****************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/inlines/inlines.js ***!
  \*****************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _emitters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../emitters */ "./paper_admin/static/paper_admin/src/js/components/emitters.js");
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
/* harmony import */ var gsap_ScrollToPlugin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap/ScrollToPlugin */ "./node_modules/gsap/ScrollToPlugin.js");
/**
 * Класс для работы с инлайн-формами.
 * @namespace Formset
 */




gsap__WEBPACK_IMPORTED_MODULE_2__["gsap"].registerPlugin(gsap_ScrollToPlugin__WEBPACK_IMPORTED_MODULE_3__["ScrollToPlugin"]);
/**
 * Конструктор объектов ManagementForm
 * @param {Element} element
 * @constructor
 */

function ManagementForm(element) {
  this.element = element;
}

ManagementForm.prototype.__property = function (selector) {
  return function (value) {
    const input = this.element.querySelector(selector);

    if (typeof value === 'undefined') {
      return parseInt(input.value.toString());
    } else {
      value = parseInt(value);

      if (!isNaN(value)) {
        input.value = value;
      }
    }
  };
};

ManagementForm.prototype.totalForms = ManagementForm.prototype.__property('input[name$="-TOTAL_FORMS"]');
ManagementForm.prototype.maxForms = ManagementForm.prototype.__property('input[name$="-MAX_NUM_FORMS"]');
/**
 * Конструктор объектов Formset
 *
 * @param {Element|Node} root
 * @param {Object} [options]
 * @constructor
 */

function Formset(root, options) {
  this.opts = Object.assign({
    prefix: 'form',
    addButtonSelector: '.add-row',
    deleteButtonSelector: '.delete-row',
    formCssClass: 'inline-related',
    emptyCssClass: 'empty-form',
    animationSpeed: 300,
    onAdded: null,
    onRemove: null
  }, options);
  this.root = root;
  this.root._inline_formset = this;
  this.mgmt = new ManagementForm(root);
  this.addButton = this.root.querySelector(this.opts.addButtonSelector);

  if (!this.addButton) {
    throw new Error('addButton not found');
  }

  this.addButton.hidden = this.mgmt.totalForms() >= this.mgmt.maxForms();
  this.addButton.querySelector('a, button').addEventListener('click', function (event) {
    event.preventDefault();
    this.addRow();
  }.bind(this));
  const that = this;
  this.root.addEventListener('click', function (event) {
    const target = event.target;
    const button = target.closest(that.opts.deleteButtonSelector);

    if (button) {
      event.preventDefault();
      const row = target.closest('.' + that.opts.formCssClass);
      that.deleteRow(row);
    }
  });
}
/**
 * Получение всех форм.
 * @returns {NodeListOf<Element>}
 */


Formset.prototype.getRows = function () {
  return this.root.querySelectorAll('.' + this.opts.formCssClass);
};
/**
 * Добавление новой формы.
 * @returns {?Node}
 */


Formset.prototype.addRow = function () {
  let totalForms = this.mgmt.totalForms();
  const maxForms = this.mgmt.maxForms();

  if (totalForms >= maxForms) {
    return null;
  }

  const templateElement = this.root.querySelector('.' + this.opts.emptyCssClass);

  if (!templateElement) {
    throw new Error('template form not found');
  }

  const row = templateElement.cloneNode(true);
  const pageYOffset = window.pageYOffset || document.documentElement.scrollTop;
  row.classList.remove(this.opts.emptyCssClass);
  templateElement.parentNode.insertBefore(row, templateElement);
  window.scrollTo({
    top: pageYOffset
  });

  if (row.tagName !== 'TR') {
    gsap__WEBPACK_IMPORTED_MODULE_2__["gsap"].from(row, {
      duration: this.opts.animationSpeed / 1000,
      height: 0,
      clearProps: 'all'
    });
  }

  this.mgmt.totalForms(++totalForms); // addButton

  this.addButton.hidden = totalForms >= maxForms; // deleteButton

  const deleteButton = row.querySelector(this.opts.deleteButtonSelector);

  if (deleteButton) {
    deleteButton.hidden = false;
  } // event


  if (this.opts.onAdded) {
    this.opts.onAdded.call(this, row, this.opts.prefix, totalForms);
  }

  this.root.dispatchEvent(new CustomEvent('row-added', {
    detail: [row, this.opts.prefix]
  }));
  _emitters__WEBPACK_IMPORTED_MODULE_1__["default"].dom.trigger('mutate', [row]);
  _emitters__WEBPACK_IMPORTED_MODULE_1__["default"].inlines.trigger('added', [row, this.opts.prefix]); // Django compatible

  $(document).trigger('formset:added', [$(row), this.opts.prefix]);
  return row;
};
/**
 * Удаление формы.
 * @param {Element|Node} row
 */


Formset.prototype.deleteRow = function (row) {
  let totalForms = this.mgmt.totalForms();
  const rows = Array.from(this.getRows());
  const row_index = rows.indexOf(row);

  if (this.opts.onRemove) {
    for (let i = row_index + 1; i < rows.length; i++) {
      this.opts.onRemove.call(this, rows[i], this.opts.prefix, i);
    }
  } // event


  _emitters__WEBPACK_IMPORTED_MODULE_1__["default"].dom.trigger('release', [row]);
  _emitters__WEBPACK_IMPORTED_MODULE_1__["default"].inlines.trigger('remove', [row, this.opts.prefix]);

  if (row.tagName !== 'TR') {
    gsap__WEBPACK_IMPORTED_MODULE_2__["gsap"].to(row, {
      duration: this.opts.animationSpeed / 1000,
      height: 0,
      onComplete: function onComplete() {
        row.parentNode.removeChild(row);
      }
    });
  } // event


  _emitters__WEBPACK_IMPORTED_MODULE_1__["default"].inlines.trigger('removed', [row, this.opts.prefix]);
  this.root.dispatchEvent(new CustomEvent('row-removed', {
    detail: [row, this.opts.prefix]
  })); // Django compatible

  $(document).trigger('formset:removed', [$(row), this.opts.prefix]);
  this.mgmt.totalForms(--totalForms); // addButton

  this.addButton.hidden = totalForms >= this.mgmt.maxForms();
};
/**
 * Установка порядкового номера всем элементам формы.
 * @param {Element|Node} row
 * @param {String} prefix
 * @param {Number} index
 */


function updateFormIndex(row, prefix, index) {
  const regex = new RegExp("(" + prefix + "-(\\d+|__prefix__))");
  const replacement = prefix + "-" + (index - 1);
  row.querySelectorAll('*').forEach(function (element) {
    if (element.htmlFor) {
      element.htmlFor = element.htmlFor.replace(regex, replacement);
    }

    if (element.id) {
      element.id = element.id.replace(regex, replacement);
    }

    if (element.name) {
      element.name = element.name.replace(regex, replacement);
    }
  });
  row.setAttribute('id', prefix + '-' + (index - 1));
}
/**
 * Обновление заголовка формы.
 * @param {Element|Node} row
 * @param {Number} index
 */


function updateInlineLabel(row, index) {
  const label = row.querySelector('.inline-label');

  if (label) {
    label.innerHTML = label.innerHTML.replace(/(#\d+)/g, "#" + index);
  }
}

function initInlineGroups(root = document.body) {
  root.querySelectorAll('.inline-group').forEach(function (inlineGroup) {
    switch (inlineGroup.dataset.inlineType) {
      case "stacked":
        new Formset(inlineGroup, {
          prefix: inlineGroup.dataset.inlinePrefix,
          onAdded: function onAdded(row, prefix, index) {
            updateFormIndex(row, prefix, index);
            updateInlineLabel(row, index);
          },
          onRemove: function onRemove(row, prefix, index) {
            updateFormIndex(row, prefix, index);
            updateInlineLabel(row, index);
          }
        });
        break;

      case "tabular":
        new Formset(inlineGroup, {
          prefix: inlineGroup.dataset.inlinePrefix,
          onAdded: function onAdded(row, prefix, index) {
            updateFormIndex(row, prefix, index);
          },
          onRemove: function onRemove(row, prefix, index) {
            updateFormIndex(row, prefix, index);
          }
        });
        break;
    }
  });
}

Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_0__["default"])(initInlineGroups);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js")))

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/inlines/sortable.js":
/*!******************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/inlines/sortable.js ***!
  \******************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _form_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../form_utils */ "./paper_admin/static/paper_admin/src/js/components/form_utils.js");
/* harmony import */ var _SortButtons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SortButtons */ "./paper_admin/static/paper_admin/src/js/components/inlines/SortButtons.js");



Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_0__["default"])(function () {
  const inlineGroups = document.querySelectorAll('.sortable-inline-group');
  inlineGroups.forEach(function (inlineGroup) {
    const sortButtonsObj = new _SortButtons__WEBPACK_IMPORTED_MODULE_2__["default"](inlineGroup, {
      speed: inlineGroup.dataset.inlineType === 'tabular' ? 0.25 : 0.5,
      items: '.sortable-item',
      moveUpBtn: '.sortable-move-up',
      moveDownBtn: '.sortable-move-down',
      ignore: '.empty-form'
    });
    inlineGroup.addEventListener('row-added', function () {
      sortButtonsObj.updateBounds();
    });
  });
});
/**
 * Установка значения сортировки инлайн-формам.
 * @param {Element} inlineGroup
 */

function fillInlineOrder(inlineGroup) {
  let currentOrder = 0;
  const inlineForms = inlineGroup.querySelectorAll('.sortable-item:not(.empty-form)');
  inlineForms.forEach(function (inlineForm) {
    if (inlineForm.classList.contains('has_original') || _form_utils__WEBPACK_IMPORTED_MODULE_1__["default"].containsChangedField(inlineForm)) {
      const input = inlineForm.querySelector('.sortable-input');

      if (input) {
        input.value = currentOrder++;
      }
    }
  });
}
/**
 * Замена индекса формы на порядковый, чтобы бэкенд Django отображал
 * формы в правильном порядке при ошибках валидации.
 * @param {Element} row
 * @param {String} prefix
 * @param {Number} index
 */


function replaceFormIndex(row, prefix, index) {
  const regex = new RegExp("(" + prefix + "-(\\d+))");
  const replacement = prefix + "-" + index;
  row.querySelectorAll('*').forEach(function (element) {
    if (element.htmlFor) {
      element.htmlFor = element.htmlFor.replace(regex, replacement);
    }

    if (element.id) {
      element.id = element.id.replace(regex, replacement);
    }

    if (element.name) {
      element.name = element.name.replace(regex, replacement);
    }
  });
  row.setAttribute('id', prefix + '-' + index);
}

document.addEventListener('submit', function (event) {
  const form = event.target;
  const inlineGroups = form.querySelectorAll('.sortable-inline-group');
  inlineGroups.forEach(function (inlineGroup) {
    fillInlineOrder(inlineGroup);
    const inlineFormset = inlineGroup._inline_formset;
    const selector = '.' + inlineFormset.opts.formCssClass + ':not(.' + inlineFormset.opts.emptyCssClass + ')';
    inlineGroup.querySelectorAll(selector).forEach(function (form, index) {
      replaceFormIndex(form, inlineFormset.opts.prefix, index);
    });
  });
});

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/components/tabs.js":
/*!******************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/components/tabs.js ***!
  \******************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
/* harmony import */ var gsap_ScrollToPlugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap/ScrollToPlugin */ "./node_modules/gsap/ScrollToPlugin.js");
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");



gsap__WEBPACK_IMPORTED_MODULE_0__["gsap"].registerPlugin(gsap_ScrollToPlugin__WEBPACK_IMPORTED_MODULE_1__["ScrollToPlugin"]);
const ERROR_MIN_VISIBILITY = 50;
Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_2__["default"])(function () {
  const errorContainers = document.querySelectorAll('.invalid, .formset-errors, .formset-form-errors');
  const firstErrorContainer = Array.from(errorContainers).find(function (errorContainer) {
    return errorContainer.innerHTML !== '';
  });

  if (firstErrorContainer) {
    // скролл к ошибке
    const errorRect = firstErrorContainer.getBoundingClientRect();
    const errorTop = errorRect.top;
    const isVisible = errorTop > ERROR_MIN_VISIBILITY && errorTop < document.documentElement.clientHeight - ERROR_MIN_VISIBILITY;

    if (!isVisible) {
      setTimeout(function () {
        gsap__WEBPACK_IMPORTED_MODULE_0__["gsap"].to(window, {
          duration: 0.5,
          scrollTo: {
            y: errorTop - Math.floor(document.documentElement.clientHeight / 2),
            offsetY: -25
          }
        });
      });
    }
  } else {
    const hash = location.hash.substr(1).replace(/-panel$/i, '-tab');
    const current_tab = hash && document.querySelector(`#${hash}`);

    if (current_tab) {
      $(current_tab).tab('show');
    }
  }
});
$(document).on('shown.bs.tab', function (event) {
  const tab_name = event.target.getAttribute('aria-controls');

  if (tab_name) {
    history.replaceState(null, '', `#${tab_name}`);
    const form = document.getElementById('changeform');

    if (form) {
      const action = new URL(form.action);
      action.hash = tab_name;
      form.action = action.toString();
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js")))

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/autocomplete.js":
/*!***********************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/autocomplete.js ***!
  \***********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var select2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! select2 */ "./node_modules/select2/dist/js/select2.js");
/* harmony import */ var select2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(select2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _components_emitters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/emitters */ "./paper_admin/static/paper_admin/src/js/components/emitters.js");
/* harmony import */ var select2_dist_css_select2_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! select2/dist/css/select2.min.css */ "./node_modules/select2/dist/css/select2.min.css");
/* harmony import */ var select2_dist_css_select2_min_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(select2_dist_css_select2_min_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _css_widgets_autocomplete_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../css/widgets/autocomplete.css */ "./paper_admin/static/paper_admin/src/css/widgets/autocomplete.css");
/* harmony import */ var _css_widgets_autocomplete_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_css_widgets_autocomplete_css__WEBPACK_IMPORTED_MODULE_4__);


 // CSS




function initWidget(options, element) {
  if (!element.closest('.empty-form')) {
    $(element).select2(options);
  }
}
/**
 * Инициализация Autocomplete виджетов
 * @param {Element} [root]
 */


function initWidgets(root = document.body) {
  let selector = '.admin-autocomplete';
  let options = {
    ajax: {
      data: function data(params) {
        return {
          term: params.term,
          page: params.page
        };
      }
    }
  };
  root.matches(selector) && initWidget(options, root);
  root.querySelectorAll(selector).forEach(initWidget.bind(null, options));
}

Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_1__["default"])(initWidgets);
_components_emitters__WEBPACK_IMPORTED_MODULE_2__["default"].dom.on('mutate', initWidgets);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js")))

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/clearable_file.js":
/*!*************************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/clearable_file.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Вставка имени файла в название кнопки
 */
document.addEventListener('change', function (event) {
  const target = event.target;

  if (target.tagName === 'INPUT' && target.closest('.vClearableFileField')) {
    let fileName = target.value.split('\\').pop();
    let buttonName = target.nextElementSibling.querySelector('span');

    if (buttonName) {
      if (fileName) {
        buttonName.textContent = fileName;
      } else {
        buttonName.textContent = buttonName.dataset.initialText;
      }
    }
  }
});
/**
 * Фикс для Firefox.
 */

document.addEventListener('focus', function (event) {
  const target = event.target;

  if (target.tagName === 'INPUT' && target.closest('.vClearableFileField')) {
    target.classList.add('focused');
  }
});
document.addEventListener('blur', function (event) {
  const target = event.target;

  if (target.tagName === 'INPUT' && target.closest('.vClearableFileField')) {
    target.classList.remove('focused');
  }
});

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/datetime.js":
/*!*******************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/datetime.js ***!
  \*******************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var flatpickr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flatpickr */ "./node_modules/flatpickr/dist/flatpickr.js");
/* harmony import */ var flatpickr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(flatpickr__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _components_emitters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/emitters */ "./paper_admin/static/paper_admin/src/js/components/emitters.js");
/* harmony import */ var flatpickr_dist_flatpickr_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! flatpickr/dist/flatpickr.min.css */ "./node_modules/flatpickr/dist/flatpickr.min.css");
/* harmony import */ var flatpickr_dist_flatpickr_min_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(flatpickr_dist_flatpickr_min_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _css_widgets_datetime_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../css/widgets/datetime.scss */ "./paper_admin/static/paper_admin/src/css/widgets/datetime.scss");
/* harmony import */ var _css_widgets_datetime_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_css_widgets_datetime_scss__WEBPACK_IMPORTED_MODULE_4__);


 // CSS




function initWidget(options, element) {
  if (!element.closest('.empty-form')) {
    flatpickr__WEBPACK_IMPORTED_MODULE_0___default()(element, options);
  }
}
/**
 * Инициализация DateTime виджетов
 * @param {Element} [root]
 */


function initWidgets(root = document.body) {
  let date_selector = '.vDatePicker';
  let date_options = {
    altInput: true,
    altFormat: "F j, Y",
    dateFormat: "Y-m-d"
  };
  root.matches(date_selector) && initWidget(date_options, root);
  root.querySelectorAll(date_selector).forEach(initWidget.bind(null, date_options));
  let time_selector = '.vTimePicker';
  let time_options = {
    allowInput: true,
    enableTime: true,
    noCalendar: true,
    dateFormat: "H:i",
    time_24hr: true
  };
  root.matches(time_selector) && initWidget(time_options, root);
  root.querySelectorAll(time_selector).forEach(initWidget.bind(null, time_options));
}

Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_1__["default"])(initWidgets);
_components_emitters__WEBPACK_IMPORTED_MODULE_2__["default"].dom.on('mutate', initWidgets);
/**
 * Симуляция нажатия стрелок при прокрутке колеса мыши на полях выбора времени.
 */

document.addEventListener('wheel', function (event) {
  const target = event.target;
  const widget = target.closest('.numInputWrapper');
  const input = widget && widget.querySelector('input');

  if (input) {
    event.preventDefault();
    const fake_event = new KeyboardEvent('keydown', {
      bubbles: true,
      cancelable: true,
      keyCode: event.deltaY > 0 ? 40 : 38
    });
    input.dispatchEvent(fake_event);
  }
}, {
  passive: false
});
/**
 * Клик на иконку календаря
 */

document.addEventListener('click', function (event) {
  const target = event.target;
  const button = target.closest('.vDateFieldTrigger');
  const widget = button && button.closest('.input-group');
  const input = widget && widget.querySelector('.vDateInput');

  if (input && input._flatpickr) {
    setTimeout(function () {
      input._flatpickr.open();
    }, 0);
  }
});

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/email.js":
/*!****************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/email.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

document.addEventListener('input', function (event) {
  const target = event.target;
  const input = target.closest('.vEmailInput');
  const widget = input && input.closest('.input-group');
  const link_tag = widget && widget.querySelector('.input-group-text');

  if (link_tag) {
    let email = input.value.trim();

    if (email) {
      link_tag.href = 'mailto:' + input.value;
    } else {
      link_tag.removeAttribute('href');
    }
  }
});

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/multiselect.js":
/*!**********************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/multiselect.js ***!
  \**********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var multiselect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiselect */ "./node_modules/multiselect/js/jquery.multi-select.js");
/* harmony import */ var multiselect__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(multiselect__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var when_dom_ready__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! when-dom-ready */ "./node_modules/when-dom-ready/dist/index.es2015.js");
/* harmony import */ var _components_emitters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/emitters */ "./paper_admin/static/paper_admin/src/js/components/emitters.js");
/* harmony import */ var _css_widgets_multiselect_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../css/widgets/multiselect.scss */ "./paper_admin/static/paper_admin/src/css/widgets/multiselect.scss");
/* harmony import */ var _css_widgets_multiselect_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_css_widgets_multiselect_scss__WEBPACK_IMPORTED_MODULE_3__);


 // CSS



function initWidget(element) {
  if (!element.closest('.empty-form')) {
    $(element).multiSelect();
  }
}
/**
 * Инициализация MultiSelect виджетов
 * @param {Element} [root]
 */


function initWidgets(root = document.body) {
  let selector = '.vMultiSelect';
  root.matches(selector) && initWidget(root);
  root.querySelectorAll(selector).forEach(initWidget);
}

Object(when_dom_ready__WEBPACK_IMPORTED_MODULE_1__["default"])(initWidgets);
_components_emitters__WEBPACK_IMPORTED_MODULE_2__["default"].dom.on('mutate', initWidgets);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js")))

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/password.js":
/*!*******************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/password.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

document.addEventListener('click', function (event) {
  const target = event.target;
  const toggler = target.closest('.vPasswordTrigger');

  if (toggler) {
    const field = toggler.closest('.input-group');
    const icon = field && field.querySelector('i.fa');
    const input = field && field.querySelector('input');

    if (input) {
      const classes = ['fa-eye-slash', 'fa-eye'];
      const types = ['text', 'password'];
      const index = (types.indexOf(input.type) + 1) % 2;
      input.type = types[index];
      icon.classList.add(classes[index]);
      icon.classList.remove(classes[(index + 1) % 2]);
    }
  }
});

/***/ }),

/***/ "./paper_admin/static/paper_admin/src/js/widgets/url.js":
/*!**************************************************************!*\
  !*** ./paper_admin/static/paper_admin/src/js/widgets/url.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

document.addEventListener('input', function (event) {
  const target = event.target;
  const input = target.closest('.vURLInput');
  const widget = input && input.closest('.input-group');
  const link_tag = widget && widget.querySelector('.input-group-text');

  if (link_tag) {
    let link = input.value.trim();

    if (link) {
      link_tag.href = link;
    } else {
      link_tag.removeAttribute('href');
    }
  }
});

/***/ })

}]);
//# sourceMappingURL=changeform.chunk.min.js.map