{"version":3,"sources":["webpack:///./paper_admin/static/paper_admin/src/js/components/hook_unload.js","webpack:///./paper_admin/static/paper_admin/src/js/passwordform.js","webpack:///./paper_admin/static/paper_admin/src/js/widgets/password.js"],"names":["hookUnload","form","submit","formHasChanged","addEventListener","message","gettext","window","evt","returnValue","document","userActionHandler","removeEventListener","changeHandler","event","target","widget","closest","contains","whenDomReady","getElementById","toggler","field","icon","querySelector","input","classes","types","index","indexOf","type","classList","add","remove"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;;AAEA;;;;AAIe,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACrC,MAAIC,MAAM,GAAG,KAAb;AACA,MAAIC,cAAc,GAAG,KAArB;AAEAF,MAAI,CAACG,gBAAL,CAAsB,QAAtB,EAAgC,YAAW;AACvCF,UAAM,GAAG,IAAT;AACH,GAFD;AAIA,QAAMG,OAAO,GAAGC,OAAO,CAAC,0BAAD,CAAvB;AACAC,QAAM,CAACH,gBAAP,CAAwB,cAAxB,EAAwC,UAASI,GAAT,EAAc;AAClD,QAAI,CAACN,MAAD,IAAWC,cAAf,EAA+B;AAC3BK,SAAG,CAACC,WAAJ,GAAkBJ,OAAlB;AACA,aAAOA,OAAP;AACH;AACJ,GALD,EATqC,CAgBrC;AACA;;AACAK,UAAQ,CAACN,gBAAT,CAA0B,SAA1B,EAAqCO,iBAArC;AACAD,UAAQ,CAACN,gBAAT,CAA0B,WAA1B,EAAuCO,iBAAvC;;AACA,WAASA,iBAAT,GAA6B;AACzBD,YAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCD,iBAAxC;AACAD,YAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CD,iBAA1C;AACAV,QAAI,CAACG,gBAAL,CAAsB,QAAtB,EAAgC,SAASS,aAAT,CAAuBC,KAAvB,EAA8B;AAC1Db,UAAI,CAACW,mBAAL,CAAyB,QAAzB,EAAmCC,aAAnC;AAEA,YAAME,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,MAAM,GAAGD,MAAM,CAACE,OAAP,CAAe,cAAf,CAAf;;AACA,UAAID,MAAM,IAAIf,IAAI,CAACiB,QAAL,CAAcF,MAAd,CAAd,EAAqC;AACjCb,sBAAc,GAAG,IAAjB;AACH;AACJ,KARD;AASH;AACJ,C;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGAgB,8DAAY,CAAC,YAAW;AACpB;AACA,QAAMlB,IAAI,GAAGS,QAAQ,CAACU,cAAT,CAAwB,cAAxB,CAAb;;AACA,MAAInB,IAAJ,EAAU;AACND,2EAAU,CAACC,IAAD,CAAV;AACH;AACJ,CANW,CAAZ,C;;;;;;;;;;;ACLAS,QAAQ,CAACN,gBAAT,CAA0B,OAA1B,EAAmC,UAASU,KAAT,EAAgB;AAC/C,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMM,OAAO,GAAGN,MAAM,CAACE,OAAP,CAAe,mBAAf,CAAhB;;AACA,MAAII,OAAJ,EAAa;AACT,UAAMC,KAAK,GAAGD,OAAO,CAACJ,OAAR,CAAgB,cAAhB,CAAd;AACA,UAAMM,IAAI,GAAGD,KAAK,IAAIA,KAAK,CAACE,aAAN,CAAoB,MAApB,CAAtB;AACA,UAAMC,KAAK,GAAGH,KAAK,IAAIA,KAAK,CAACE,aAAN,CAAoB,OAApB,CAAvB;;AACA,QAAIC,KAAJ,EAAW;AACP,YAAMC,OAAO,GAAG,CAAC,cAAD,EAAiB,QAAjB,CAAhB;AACA,YAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,UAAT,CAAd;AACA,YAAMC,KAAK,GAAG,CAACD,KAAK,CAACE,OAAN,CAAcJ,KAAK,CAACK,IAApB,IAA4B,CAA7B,IAAkC,CAAhD;AACAL,WAAK,CAACK,IAAN,GAAaH,KAAK,CAACC,KAAD,CAAlB;AACAL,UAAI,CAACQ,SAAL,CAAeC,GAAf,CAAmBN,OAAO,CAACE,KAAD,CAA1B;AACAL,UAAI,CAACQ,SAAL,CAAeE,MAAf,CAAsBP,OAAO,CAAC,CAACE,KAAK,GAAG,CAAT,IAAc,CAAf,CAA7B;AACH;AACJ;AACJ,CAhBD,E","file":"passwordform.chunk.min.js","sourcesContent":["/* global gettext */\n\n/**\n * Инициализация отслеживания изменения формы и вывод\n * предупреждения при попытке закрыть страницу без сохранения.\n */\nexport default function hookUnload(form) {\n    let submit = false;\n    let formHasChanged = false;\n\n    form.addEventListener('submit', function() {\n        submit = true;\n    });\n\n    const message = gettext('You have unsaved changes');\n    window.addEventListener('beforeunload', function(evt) {\n        if (!submit && formHasChanged) {\n            evt.returnValue = message;\n            return message;\n        }\n    });\n\n    // начинаем отслеживать изменения после первого действия\n    // пользователя, чтобы игнорировать последствия инициализации\n    document.addEventListener('keydown', userActionHandler);\n    document.addEventListener('mousedown', userActionHandler);\n    function userActionHandler() {\n        document.removeEventListener('keydown', userActionHandler);\n        document.removeEventListener('mousedown', userActionHandler);\n        form.addEventListener('change', function changeHandler(event) {\n            form.removeEventListener('change', changeHandler);\n\n            const target = event.target;\n            const widget = target.closest('.form-widget');\n            if (widget && form.contains(widget)) {\n                formHasChanged = true;\n            }\n        });\n    }\n}\n","import whenDomReady from \"when-dom-ready\";\nimport hookUnload from \"./components/hook_unload\";\nimport \"./widgets/password\";\n\n\nwhenDomReady(function() {\n    // предупреждение при закрытии формы\n    const form = document.getElementById('passwordform');\n    if (form) {\n        hookUnload(form);\n    }\n});\n","document.addEventListener('click', function(event) {\n    const target = event.target;\n    const toggler = target.closest('.vPasswordTrigger');\n    if (toggler) {\n        const field = toggler.closest('.input-group');\n        const icon = field && field.querySelector('i.fa');\n        const input = field && field.querySelector('input');\n        if (input) {\n            const classes = ['fa-eye-slash', 'fa-eye'];\n            const types = ['text', 'password'];\n            const index = (types.indexOf(input.type) + 1) % 2;\n            input.type = types[index];\n            icon.classList.add(classes[index]);\n            icon.classList.remove(classes[(index + 1) % 2]);\n        }\n    }\n});\n"],"sourceRoot":""}