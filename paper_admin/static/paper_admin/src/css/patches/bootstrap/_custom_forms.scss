@use "sass:math";
@import "css/abstracts/bootstrap";
@import "css/abstracts/functions/sum";

// add theme colors
.custom-control {
  @each $color, $value in $theme-colors {
    .custom-control-input.#{$color}:checked ~ .custom-control-label:before {
      border-color: $value;
      background-color: $value;
    }

    .custom-control-input.#{$color}:not(:disabled):active ~ .custom-control-label::before {
      border-color: $value;
    }
  }
}

// use font-size-lg
.custom-control {
  min-height: $font-size-lg * $line-height-lg;
}

.custom-control-label {
  &:after,
  &:before {
    top: math.div($font-size-lg * $line-height-lg - $custom-control-indicator-size, 2);
  }
}

.custom-switch {
  .custom-control-label {
    &::after {
      top: sum(
        math.div($font-size-lg * $line-height-lg - $custom-control-indicator-size, 2),
        $custom-control-indicator-border-width * 2
      );
    }
  }
}

// enlarge label font-size
.custom-control-label {
  font-size: $input-font-size-lg;
}

// remove unnecessary right padding when label is empty
.custom-control {
  padding-left: $custom-control-indicator-size;
}

.custom-control-label {
  &:not(:empty) {
    margin-left: $custom-control-gutter;
  }

  &:empty {
    &:after,
    &:before {
      left: -$custom-control-indicator-size;
    }
  }
}

.custom-switch {
  padding-left: $custom-switch-width;

  .custom-control-label {
    &:empty {
      &:before {
        left: -$custom-switch-width;
      }

      &:after {
        left: sum(-$custom-switch-width, $custom-control-indicator-border-width * 2);
      }
    }
  }
}

.custom-control {
  // fix focus outline
  .custom-control-input:focus ~ .custom-control-label {
    &:before {
      border-color: $input-focus-border-color !important;
    }
  }

  // fix cursor
  .custom-control-input:not(.disabled):not([disabled]) ~ .custom-control-label {
    cursor: pointer;

    &:before {
      pointer-events: auto;
    }
  }

  // enlarge check mark
  .custom-control-input:checked ~ .custom-control-label:after {
    background-size: 100%;
  }
}

.custom-radio {
  // restyle radio
  .custom-control-input ~ .custom-control-label {
    &:before {
      padding: 0.1875rem;
      background-clip: content-box;
    }

    &:after {
      content: none;
    }
  }

  .custom-control-input {
    &[disabled]:not(:checked),
    &:disabled:not(:checked) {
      ~ .custom-control-label::before {
        padding: 0;
      }
    }
  }
}

// fix border on disabled checked state
.custom-radio {
  .custom-control-input {
    &:disabled:checked ~ .custom-control-label:before {
      border-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}

.custom-checkbox,
.custom-switch {
  .custom-control-input {
    &:disabled:checked ~ .custom-control-label:before {
      border-color: transparent;
    }
  }
}
