# Generated by Django 4.1.7 on 2023-03-28 19:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0014_alter_category_f_fk'),
    ]

    operations = [
        migrations.CreateModel(
            name='Widgets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_boolean', models.BooleanField(default=False, help_text='Standard boolean field', verbose_name='boolean')),
                ('f_switch', models.BooleanField(default=False, help_text='Boolean field with <code>AdminSwitchInput</code> widget', verbose_name='boolean switch')),
                ('f_small_int', models.SmallIntegerField(default=0, help_text='Standard <code>SmallIntegerField</code>', verbose_name='small integer')),
                ('f_int', models.IntegerField(default=0, help_text='Standard <code>IntegerField</code>', verbose_name='integer')),
                ('f_bigint', models.BigIntegerField(default=0, help_text='Standard <code>BigIntegerField</code>', verbose_name='big integer')),
                ('f_float', models.FloatField(default=0, help_text='Standard <code>FloatField</code>', verbose_name='float')),
                ('f_decimal', models.DecimalField(decimal_places=2, default=0, help_text='Standard <code>DecimalField</code>', max_digits=16, verbose_name='decimal')),
                ('f_choices', models.SmallIntegerField(choices=[(1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four')], default=1, help_text='Integer choices', verbose_name='choices')),
                ('f_radio_choices', models.SmallIntegerField(choices=[(1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four')], default=1, help_text='Radio choices', verbose_name='Radio choices')),
                ('f_date', models.DateField(help_text='Standard <code>DateField</code>', null=True, verbose_name='date')),
                ('f_select_date', models.DateField(help_text='<code>DateField</code> with <code>SelectDateWidget</code>', null=True, verbose_name='date selects')),
                ('f_time', models.TimeField(help_text='Standard <code>TimeField</code>', null=True, verbose_name='time')),
                ('f_datetime', models.DateTimeField(help_text='Standard <code>DateTimeField</code>', null=True, verbose_name='datetime')),
                ('f_duration', models.DurationField(blank=True, help_text='Standard <code>DurationField</code>', null=True, verbose_name='duration')),
                ('f_char', models.CharField(blank=True, help_text='Standard <code>CharField</code>', max_length=128, verbose_name='char')),
                ('f_slug', models.SlugField(blank=True, help_text='Standard <code>SlugField</code>', max_length=128, verbose_name='slug')),
                ('f_email', models.EmailField(blank=True, help_text='Standard <code>EmailField</code>', max_length=254, verbose_name='email')),
                ('f_password', models.CharField(blank=True, help_text='<code>CharField</code> with <code>PasswordInput</code>', max_length=128, verbose_name='password')),
                ('f_ip', models.GenericIPAddressField(blank=True, help_text='Standard <code>GenericIPAddressField</code>', null=True, verbose_name='IP')),
                ('f_text', models.TextField(blank=True, help_text='Standard <code>TextField</code>', max_length=512, verbose_name='text')),
                ('f_url', models.URLField(blank=True, help_text='Standard <code>URLField</code>', verbose_name='URL')),
                ('f_uuid', models.UUIDField(blank=True, help_text='Standard <code>UUIDField</code>', null=True, verbose_name='UUID')),
                ('f_filepath', models.FilePathField(blank=True, help_text='Standard <code>FilePathField</code>', path='/home/jon/Python/www/paper-admin/tests/app', verbose_name='filepath')),
                ('f_file', models.FileField(blank=True, help_text='Standard <code>FileField</code>', upload_to='widgets', verbose_name='file')),
                ('f_file_input', models.FileField(blank=True, help_text='<code>FileField</code> with <code>FileInput</code>', upload_to='widgets', verbose_name='file')),
                ('f_image', models.ImageField(blank=True, help_text='Standard <code>ImageField</code>', upload_to='widgets', verbose_name='image')),
                ('f_char_ro', models.CharField(blank=True, default='Default value', help_text='Read-only <code>CharField</code>', max_length=128, verbose_name='char')),
                ('f_int_ro', models.IntegerField(default=42, help_text='Read-only <code>IntegerField</code>', verbose_name='int')),
                ('f_text_ro', models.TextField(blank=True, default='In hac habitasse platea dictumst. Curabitur nisi. Phasellus accumsan cursus velit. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.', help_text='Read-only <code>TextField</code>', verbose_name='text')),
                ('f_hidden', models.CharField(blank=True, help_text='Hidden <code>CharField</code>', max_length=128, verbose_name='hidden')),
                ('dal_fk', models.ForeignKey(blank=True, help_text='DAL <code>ManyToManyField</code>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app.tag', verbose_name='FK')),
                ('dal_m2m', models.ManyToManyField(blank=True, help_text='DAL <code>ManyToManyField</code>', related_name='+', to='app.tag', verbose_name='M2M')),
                ('f_ac_fk', models.ForeignKey(blank=True, help_text='Autocomplete <code>ForeignKey</code>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app.tag', verbose_name='Autocomplete FK')),
                ('f_ac_m2m', models.ManyToManyField(blank=True, help_text='Autocomplete <code>ManyToManyField</code>', related_name='+', to='app.tag', verbose_name='Autocomplete M2M')),
                ('f_ac_o2o', models.OneToOneField(blank=True, help_text='Autocomplete <code>OneToOneField</code>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app.tag', verbose_name='Autocomplete One-to-One')),
                ('f_checkbox_m2m', models.ManyToManyField(blank=True, help_text='<code>ManyToManyField</code> with <code>AdminCheckboxSelectMultiple</code>', related_name='+', to='app.tag', verbose_name='Checkbox M2M')),
                ('f_fk', models.ForeignKey(blank=True, help_text='Standard <code>ForeignKey</code>', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='app.tag', verbose_name='FK')),
                ('f_horizontal_m2m', models.ManyToManyField(blank=True, help_text='Horizontal <code>ManyToManyField</code>', related_name='+', to='app.tag', verbose_name='Horizontal M2M')),
                ('f_m2m', models.ManyToManyField(blank=True, help_text='Standard <code>ManyToManyField</code>', related_name='+', to='app.tag', verbose_name='M2M')),
                ('f_o2o', models.OneToOneField(blank=True, help_text='Standard <code>OneToOneField</code>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app.tag', verbose_name='One-to-One')),
                ('f_radio_fk', models.ForeignKey(blank=True, help_text='Radio <code>ForeignKey</code>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app.tag', verbose_name='Radio FK')),
                ('f_radio_m2m', models.ManyToManyField(blank=True, help_text='Raw ID <code>ManyToManyField</code>', related_name='+', to='app.tag', verbose_name='Radio M2M')),
                ('f_raw_id_fk', models.ForeignKey(blank=True, help_text='Raw ID <code>ForeignKey</code>', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app.tag', verbose_name='Raw ID FK')),
            ],
            options={
                'verbose_name': 'widgets',
                'verbose_name_plural': 'widgets',
            },
        ),
    ]
